# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# TensorRT image
# uses CUDA 11.7
FROM nvcr.io/nvidia/tensorrt:22.12-py3
# FROM nvcr.io/nvidia/tensorrt:23.02-py3  # uses CUDA 12.0, not supported on the gpu-triton runners' CUDA driver

# CUDA images (requires us to manually install tensorrt)
# FROM nvidia/cuda:11.7.1-devel-ubuntu22.04
# FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu22.04

WORKDIR /opt/scorecard

RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    build-essential \
    curl \
    fish \
    git \
    python3 \
    libpq-dev \
    postgresql \
    postgresql-contrib \
    python3-dev \
    python3-pip \
    sudo \
    vim \
    wget \
    ;

# llvm
RUN echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main" >> /etc/apt/sources.list
RUN echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-15 main" >> /etc/apt/sources.list
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add
RUN apt update && apt install -y libllvm-15-ocaml-dev \
    libllvm15 \
    llvm-15 \
    llvm-15-dev \
    llvm-15-runtime

# python dependencies
RUN python3 -m pip install --no-cache-dir \
    cmake \
    commentjson==0.9.0 \
    google-cloud-bigquery==3.5.0 \
    jinja2 \
    jsonschema==4.17.3 \
    ninja \
    nvidia-tensorrt \
    onnx \
    onnxruntime-gpu \
    psycopg2==2.9.5 \
    pytest \
    pytest-xdist \
    pyyaml \
    tabulate==0.9.0 \
    torch \
    typing_extensions \
    xgboost \
    ;

RUN python3 -m pip --no-cache-dir install onnx_graphsurgeon==0.3.26 --index-url https://pypi.ngc.nvidia.com --no-deps

# onnx nightly
RUN mkdir /opt/onnx_nightly
RUN PYTHONUSERBASE=/opt/onnx_nightly pip install --user \
    --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ORT-Nightly/pypi/simple/ \
    # ort-nightly \
    ort-nightly-gpu
ENV ONNX_NIGHTLY_PATH /opt/onnx_nightly/lib/python3.10/site-packages

# Build TVM
ARG TVM_BUILT_AT
COPY . .
RUN git config user.name test && git config user.email test@example.com

# Add this line to build in an un-merged PR
# RUN PR_NUMBER=NN bash -c 'cd relax && curl -L "https://github.com/octoml/relax/pull/$PR_NUMBER.diff" | patch -p1 -N -d . && git add . && git commit -m"PR #$PR_NUMBER"'
# RUN bash -c 'cd relax && curl -L "https://github.com/octoml/relax/compare/TUZ-145.diff" | patch -p1 -N -d . && git add . && git commit -m"Add TUZ-145"'

RUN rm -rf build-scorecard
ENV TVM_LIBRARY_PATH /opt/scorecard/build-scorecard
RUN bash scorecard/docker/build_relax.sh
RUN cd python && python3 -m pip install --no-cache-dir -e .

# aws CLI
RUN pip install awscli

ENV ORT_TENSORRT_FP16_ENABLE 1
ENV AWS_DEFAULT_REGION us-west-2
